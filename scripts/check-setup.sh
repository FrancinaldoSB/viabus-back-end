#!/bin/bash

# Script para verificar e configurar permiss√µes Docker
# Autor: GitHub Copilot

echo "üîç Verificando configura√ß√£o Docker e Minikube..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

echo ""
echo "=== Verifica√ß√£o do Docker ==="

# Verificar se o Docker est√° instalado
if command -v docker > /dev/null 2>&1; then
    print_success "Docker est√° instalado: $(docker --version)"
else
    print_error "Docker n√£o est√° instalado"
    exit 1
fi

# Verificar se o usu√°rio est√° no grupo docker
if groups | grep -q docker; then
    print_success "Usu√°rio est√° no grupo docker"
    NEED_SUDO_DOCKER=false
else
    print_warning "Usu√°rio N√ÉO est√° no grupo docker"
    print_info "Para adicionar ao grupo docker execute:"
    echo "    sudo usermod -aG docker \$USER"
    echo "    newgrp docker"
    NEED_SUDO_DOCKER=true
fi

# Testar comando docker
if docker info > /dev/null 2>&1; then
    print_success "Docker funciona sem sudo"
elif sudo docker info > /dev/null 2>&1; then
    print_warning "Docker requer sudo"
else
    print_error "Docker n√£o est√° funcionando"
fi

echo ""
echo "=== Verifica√ß√£o do Minikube ==="

# Verificar se o Minikube est√° instalado
if command -v minikube > /dev/null 2>&1; then
    print_success "Minikube est√° instalado: $(minikube version --short)"
else
    print_error "Minikube n√£o est√° instalado"
    exit 1
fi

# Verificar status do Minikube
if minikube status > /dev/null 2>&1; then
    print_success "Minikube est√° rodando"
    echo "    Perfil: $(minikube profile)"
    echo "    IP: $(minikube ip)"
else
    print_warning "Minikube n√£o est√° rodando"
fi

echo ""
echo "=== Verifica√ß√£o do kubectl ==="

# Verificar se o kubectl est√° instalado
if command -v kubectl > /dev/null 2>&1; then
    print_success "kubectl est√° instalado: $(kubectl version --client --short 2>/dev/null || kubectl version --client)"
else
    print_error "kubectl n√£o est√° instalado"
    exit 1
fi

# Verificar contexto do kubectl
if kubectl cluster-info > /dev/null 2>&1; then
    print_success "kubectl conectado ao cluster"
    echo "    Contexto: $(kubectl config current-context)"
else
    print_warning "kubectl n√£o consegue conectar ao cluster"
fi

echo ""
echo "=== Recomenda√ß√µes ==="

if [ "$NEED_SUDO_DOCKER" = true ]; then
    print_info "Use o script 'deploy-smart.sh' que detecta automaticamente quando usar sudo"
    print_info "Ou execute os comandos para adicionar seu usu√°rio ao grupo docker:"
    echo "    sudo usermod -aG docker \$USER"
    echo "    newgrp docker"
    echo "    # Ou reinicie sua sess√£o"
else
    print_success "Sua configura√ß√£o est√° pronta! Use qualquer script de deploy."
fi

echo ""
echo "=== Comandos de Deploy Dispon√≠veis ==="
echo "‚Ä¢ ./deploy.sh         - Deploy padr√£o (pode precisar de sudo)"
echo "‚Ä¢ ./deploy-smart.sh   - Deploy inteligente (detecta permiss√µes)"
echo "‚Ä¢ ./status.sh         - Verificar status dos recursos"
echo "‚Ä¢ ./cleanup.sh        - Limpar todos os recursos"